# Generated by Django 5.2 on 2025-05-03 20:20

import accounts.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0067_ordine_email_inviata'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cookie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('scelta', models.CharField(max_length=50)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reclamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cognome', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('numero_ordine', models.CharField(max_length=50)),
                ('oggetto', models.CharField(max_length=255)),
                ('messaggio', models.TextField()),
                ('allegato', models.FileField(blank=True, null=True, upload_to='reclami_allegati/')),
                ('data_invio', models.DateTimeField(auto_now_add=True)),
                ('numero_ticket', models.PositiveIntegerField(default=accounts.models.generate_ticket_number, editable=False, unique=True)),
                ('stato', models.CharField(choices=[('aperto', 'Aperto'), ('in_lavorazione', 'In lavorazione'), ('chiuso', 'Chiuso')], default='aperto', max_length=20)),
                ('esito', models.CharField(blank=True, choices=[('positivo', 'Positivo'), ('negativo', 'Negativo'), ('', 'Non definito')], max_length=10)),
                ('risposta_admin', models.TextField(blank=True, null=True)),
                ('data_risposta', models.DateTimeField(blank=True, null=True)),
                ('utente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cognome', models.CharField(max_length=100)),
                ('indirizzo', models.CharField(max_length=255)),
                ('civico', models.CharField(max_length=20)),
                ('cap', models.CharField(max_length=5)),
                ('citta', models.CharField(max_length=100)),
                ('provincia', models.CharField(max_length=100)),
                ('codice_fiscale', models.CharField(max_length=16)),
                ('telefono', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aggiunto_il', models.DateTimeField(auto_now_add=True)),
                ('prodotto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlisted_by', to='core.prodotto')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'prodotto')},
            },
        ),
    ]
